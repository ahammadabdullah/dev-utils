name: Build macOS (reusable)

on:
  workflow_call:
    secrets:
      MAC_CERTIFICATE:
        required: false
      MAC_CERTIFICATE_PASSWORD:
        required: false
      APPLE_API_KEY_ID:
        required: false
      APPLE_API_ISSUER:
        required: false
      APPLE_API_KEY:
        required: false
      APPLE_TEAM_ID:
        required: false
      APPLE_ID:
        required: false
      APPLE_APP_SPECIFIC_PASSWORD:
        required: false
    outputs:
      artifact-name:
        description: "Name of the uploaded macOS artifact"
        value: macos-build

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    env:
      CSC_LINK: ${{ secrets.MAC_CERTIFICATE }}
      CSC_KEY_PASSWORD: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}
      APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
      APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
      APPLE_API_KEY_CONTENT: ${{ secrets.APPLE_API_KEY }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      # APPLE_ID: ${{ secrets.APPLE_ID }}
      # APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Prepare Apple API key file (if provided)
        shell: bash
        run: |
          if [ -n "$APPLE_API_KEY_CONTENT" ] && [ -n "$APPLE_API_KEY_ID" ]; then
            mkdir -p "$HOME/.private_keys"
            KEY_PATH="$HOME/.private_keys/AuthKey_${APPLE_API_KEY_ID}.p8"
            printf "%s" "$APPLE_API_KEY_CONTENT" > "$KEY_PATH"
            chmod 600 "$KEY_PATH"
            echo "APPLE_API_KEY=$KEY_PATH" >> "$GITHUB_ENV"
            echo "Apple API key saved to $KEY_PATH"
          fi

      - name: Configure notarization toggle
        shell: bash
        run: |
          if [ -z "$CSC_LINK" ] || \
             [ -z "$CSC_KEY_PASSWORD" ] || \
             { [ -z "$APPLE_API_KEY_ID" ] || [ -z "$APPLE_API_ISSUER" ] || [ -z "$APPLE_API_KEY" ]; } && \
             { [ -z "$APPLE_ID" ] || [ -z "$APPLE_APP_SPECIFIC_PASSWORD" ]; }; then
            echo "ELECTRON_BUILD_SKIP_NOTARIZE=true" >> "$GITHUB_ENV"
            echo "Notarization disabled (missing secrets). Building unsigned artifact for testing only."
          else
            echo "ELECTRON_BUILD_SKIP_NOTARIZE=false" >> "$GITHUB_ENV"
            echo "Notarization enabled."
          fi

      - name: Build application
        run: npm run build

      - name: Build Electron app (macOS)
        run: npm run dist:mac -- --publish never

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            release/*.dmg
            release/*.dmg.blockmap
            release/latest-mac.yml
